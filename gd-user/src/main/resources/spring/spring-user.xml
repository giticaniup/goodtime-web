<?xml version= "1.0" encoding ="GBK" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <context:annotation-config/>

    <!-- 自动扫描service -->
    <context:component-scan base-package="com.goodtime.user">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--日志记录配置-->
    <bean id="logAspect" class="com.goodtime.base.aspect.LogAspect"/>

    <aop:config>
        <aop:aspect id="received" ref="logAspect">
            <aop:pointcut id="receivedService"
                          expression="execution(* com.goodtime.user.service.*.*(..))"/>
            <aop:around pointcut-ref="receivedService" method="around"/>
        </aop:aspect>
    </aop:config>

    <!--使用Gson进行json转换-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.json.GsonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!--引入配置文件-->
    <bean id="propertyConfigurer"
          class="com.goodtime.base.util.EncryptPropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"/>
    </bean>

    <!--配置dataSource-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${database.driver}"/>
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
    </bean>

    <!--整合Spring和MyBatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/UserMapper.xml"/>
    </bean>
    <!--配置mybatis扫描的包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.goodtime.user.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!-- 对标注@Transactional注解的Bean进行加工处理，以织入事务管理切面 -->
    <!-- 默认情况下，<tx:annotation-driven的transaction-manager的值为transactionManager，
    因而此处可直接简化为 <tx:annotation-driven/>-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 事务增强 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--事务属性定义  -->
        <tx:attributes>
            <!--            <tx:method name="get*" read-only="false"/>
                       <tx:method name="save*" rollback-for="Exception"/>
                       <tx:method name="update*"/> -->
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!-- 对服务层的类提供事务支持 -->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethod" expression="execution(* com.goodtime.user.service.*.*(..))"/>
        <!-- 引用事务增强 -->
        <aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
    </aop:config>

    <!-- dubbo consumer -->
    <dubbo:application name="gd-user"/>

    <dubbo:registry address="zookeeper://127.0.0.1:2181"></dubbo:registry>

    <dubbo:reference id="hellodubbo" interface="com.kode.api.DemoService"/>
    <dubbo:reference id="userInfoService" interface="com.github.api.service.UserInfoService"/>
</beans>